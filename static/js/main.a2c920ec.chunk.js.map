{"version":3,"sources":["components/FilmDetails.js","components/FilmList.js","components/useFilmFetch.js","App.js","index.js"],"names":["FilmDetails","filmDetails","savedFavFilms","JSON","parse","localStorage","getItem","useState","favorites","setFavorites","useEffect","setItem","stringify","filmProps","properties","Card","Body","Title","style","paddingBottom","Row","margin","Col","xs","marginTop","className","title","uid","_id","id","onClick","filmDetailsId","tmpFavorites","handleFavClick","xmlns","width","height","fill","viewBox","d","sm","release_date","director","producer","opening_crawl","FilmsList","films","handleClick","activeItemId","filmListHtml","map","film","ListGroup","Item","useFilmFetch","setFilms","loading","setLoading","fetchFilms","a","axios","get","then","res","console","log","allFilms","data","result","App","setFilmDetails","setActiveItemId","firstActive","foundFilmDetails","getFilmById","foundFilms","filter","length","Container","textAlign","FilmList","e","currentId","target","gotFilmById","Spinner","animation","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2c920ec.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Col, Card, Row } from \"react-bootstrap\";\r\n\r\n\r\nconst FilmDetails = ({ filmDetails }) => {\r\n    const savedFavFilms = JSON.parse( localStorage.getItem( 'favorites' ));\r\n    const [ favorites, setFavorites ] = useState( savedFavFilms || {} );\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem( 'favorites', JSON.stringify( favorites ))\r\n    }, [ favorites ]);\r\n\r\n    const handleFavClick = ( filmDetailsId ) => {\r\n        const tmpFavorites = { ...favorites } // shallow copy - in favorites we have primitives\r\n        if( tmpFavorites[ filmDetailsId ] ){\r\n            delete( tmpFavorites[ filmDetailsId ] );\r\n            \r\n        } else {\r\n            tmpFavorites[ filmDetailsId ] = true;\r\n        }\r\n        setFavorites( tmpFavorites );\r\n    }\r\n\r\n    const filmProps = filmDetails?.properties;\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title style={{ paddingBottom: '0.1em' }}><h4>Film Details</h4></Card.Title>\r\n                        <Row style={{ margin: '0.5em' }}>\r\n                            <Col xs={6} style={{ marginTop: '0.6em' }}>\r\n                                <div key={ filmDetails?.uid } className=\"title\">{ filmProps?.title }</div>\r\n                                </Col>\r\n                            <Col xs={6}>\r\n                                <div \r\n                                    className={ `fav ${favorites[ filmDetails?._id ] ? 'is-fav' : ''}` } \r\n                                    key={ filmDetails?._id } id={ filmDetails?._id } \r\n                                    onClick={() => handleFavClick( filmDetails?._id )}\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-heart\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"/>\r\n                                    </svg>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"ditailsAbstract\">\r\n                            <Col sm={12}>\r\n                                <div><span>Release Date :</span> { filmProps?.release_date }</div>\r\n                                <div><span>Director :</span> { filmProps?.director }</div>\r\n                                <div><span>Producer :</span> { filmProps?.producer }</div>\r\n                                <div><span>Description :</span> { filmProps?.opening_crawl }</div>\r\n                            </Col>\r\n                        </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilmDetails;","import { ListGroup, Card } from \"react-bootstrap\";\r\n\r\n\r\nconst FilmsList = ({ films, handleClick, activeItemId }) => {\r\n\r\n  const filmListHtml = films.map( film => \r\n    <ListGroup.Item key={ film?.uid } >\r\n      <div \r\n        className={ `listItem ${activeItemId === film?._id ? 'active-item' : '' }` } \r\n        id={ film?._id } \r\n        onClick={ handleClick }\r\n      >\r\n        { film?.properties?.title }\r\n      </div>\r\n    </ListGroup.Item>\r\n  );\r\n    \r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h4>Film List</h4>\r\n          </Card.Title>\r\n          <ListGroup style={{ marginTop: '1rem' }}>\r\n            { filmListHtml }\r\n          </ListGroup> \r\n        </Card.Body>\r\n      </Card>   \r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default FilmsList;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const useFilmFetch = () => {\r\n    const [ films, setFilms ] = useState([]);\r\n    const [ loading, setLoading ] = useState( false );\r\n\r\n    const url = 'https://www.swapi.tech/api/films';\r\n  \r\n    useEffect(() => {\r\n      fetchFilms();\r\n    }, []);\r\n\r\n    const fetchFilms = async () => {\r\n      try {\r\n         const data = await axios \r\n         .get( `${url}` )\r\n         .then( res => {\r\n            console.log(res);\r\n            const allFilms = res.data.result;\r\n            setFilms( allFilms );\r\n         });\r\n         setLoading(true);\r\n      } catch (e) {\r\n         console.log(e);\r\n      }\r\n   }\r\n     return { films, loading, fetchFilms };\r\n  };\r\n\r\n  export default useFilmFetch;","import './App.css';\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport FilmDetails from './components/FilmDetails';\nimport FilmList from './components/FilmList';\nimport useFilmFetch from './components/useFilmFetch';\n\n\n\n\nconst App = () => {\n  const { films, loading }  = useFilmFetch();\n  const [ filmDetails, setFilmDetails ] = useState( null );\n  const [ activeItemId, setActiveItemId ] = useState( null );\n\n  useEffect(() => {\n    // setLoading( true );\n    const firstActive = films[0]?._id;\n    const foundFilmDetails = getFilmById(films, firstActive);\n    setFilmDetails(foundFilmDetails);\n    setActiveItemId(firstActive);\n    \n  }, [films] )\n\n  const handleClick = (e, films) => {\n    const currentId = e.target.id;\n    const gotFilmById = getFilmById(films, currentId);\n    setFilmDetails(gotFilmById); \n    setActiveItemId(currentId);\n  }\n\n  const getFilmById = (films, id) => {\n    const foundFilms = films.filter(film => film._id === id);\n    if(foundFilms.length > 0){\n      return foundFilms[0];\n    } else {\n      return null;\n    }\n  }\n   \n  return (\n    <>\n      <h1 className=\"pt-3 text-center font-details pb-3\">Star Wars Films</h1>\n      <Container style={{textAlign:'center'}}>\n        { loading ? (<Row>\n                      <Col sm={4}>\n                        <FilmList films={films} activeItemId={activeItemId} handleClick={(e) => handleClick(e, films)} />\n                      </Col>\n                      <Col sm={8}>\n                        <FilmDetails filmDetails={filmDetails} />\n                      </Col>\n                    </Row>) \n                  : <Spinner animation=\"border\" role=\"status\" /> } \n        \n        </Container >\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}